#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by esgf.nci.org.au - 2023/03/07 09:14:59
# Search URL: http://esgf.nci.org.au/esg-search/wget/?distrib=false&dataset_id=CMIP6.ScenarioMIP.CSIRO.ACCESS-ESM1-5.ssp126.r1i1p1f1.Oday.tos.gn.v20210318|esgf.nci.org.au&dataset_id=CMIP6.ScenarioMIP.CSIRO.ACCESS-ESM1-5.ssp585.r1i1p1f1.Oday.tos.gn.v20210318|esgf.nci.org.au&dataset_id=CMIP6.ScenarioMIP.CSIRO.ACCESS-ESM1-5.ssp245.r1i1p1f1.Oday.tos.gn.v20191115|esgf.nci.org.au&dataset_id=CMIP6.ScenarioMIP.CSIRO-ARCCSS.ACCESS-CM2.ssp585.r1i1p1f1.Oday.tos.gn.v20210317|esgf.nci.org.au&dataset_id=CMIP6.ScenarioMIP.CSIRO-ARCCSS.ACCESS-CM2.ssp126.r1i1p1f1.Oday.tos.gn.v20210317|esgf.nci.org.au&dataset_id=CMIP6.ScenarioMIP.CSIRO-ARCCSS.ACCESS-CM2.ssp245.r1i1p1f1.Oday.tos.gn.v20191108|esgf.nci.org.au
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='http://esgf.nci.org.au/esg-search/wget/?distrib=false&dataset_id=CMIP6.ScenarioMIP.CSIRO.ACCESS-ESM1-5.ssp126.r1i1p1f1.Oday.tos.gn.v20210318|esgf.nci.org.au&dataset_id=CMIP6.ScenarioMIP.CSIRO.ACCESS-ESM1-5.ssp585.r1i1p1f1.Oday.tos.gn.v20210318|esgf.nci.org.au&dataset_id=CMIP6.ScenarioMIP.CSIRO.ACCESS-ESM1-5.ssp245.r1i1p1f1.Oday.tos.gn.v20191115|esgf.nci.org.au&dataset_id=CMIP6.ScenarioMIP.CSIRO-ARCCSS.ACCESS-CM2.ssp585.r1i1p1f1.Oday.tos.gn.v20210317|esgf.nci.org.au&dataset_id=CMIP6.ScenarioMIP.CSIRO-ARCCSS.ACCESS-CM2.ssp126.r1i1p1f1.Oday.tos.gn.v20210317|esgf.nci.org.au&dataset_id=CMIP6.ScenarioMIP.CSIRO-ARCCSS.ACCESS-CM2.ssp245.r1i1p1f1.Oday.tos.gn.v20191108|esgf.nci.org.au'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_20150101-20241231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_20150101-20241231.nc' 'SHA256' '90a1f569bbde6a69c19fd36c6376cdf6e503eb4fc927fdb8752f4e3844b775ec'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_20250101-20341231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_20250101-20341231.nc' 'SHA256' '42152b623baf9ee99b989632f14e4f229bab2ca2c0bed1c0b6d4573ff1275dd7'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_20350101-20441231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_20350101-20441231.nc' 'SHA256' '3b3883a523650554bd571e1cdd0805740002d44e78d285520ffc84768ffdd992'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_20450101-20541231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_20450101-20541231.nc' 'SHA256' 'dc33667d4b1a0ef6d5faf6fde10d96da63fb737003f198ad5560cfd371daa90f'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_20550101-20641231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_20550101-20641231.nc' 'SHA256' '96d986647fbcab34dfa471494b784728609c45368b8f343658e001f97dc9fc29'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_20650101-20741231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_20650101-20741231.nc' 'SHA256' 'fadb8c8500626482757ba3760945e68db2956c44638c897aaacbce7e94278faa'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_20750101-20841231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_20750101-20841231.nc' 'SHA256' 'c06eba997f3e80d383faeeb38da7dc4bdc5f0b76ee0c3ecd14e3d84ab71770e6'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_20850101-20941231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_20850101-20941231.nc' 'SHA256' '30115601d62597956c9fc576b11989913b1bf73adf2409002d153434f7820ded'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_20950101-21001231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_20950101-21001231.nc' 'SHA256' 'f0704d33c99d1deba9dd74a851efce07967258e0eb256bd70571cbb3de7ea941'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_21010101-21101231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_21010101-21101231.nc' 'SHA256' '005b95317e8addc825524b3b0f2e7ea058095c4508b018a88fcf162a02391b99'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_21110101-21201231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_21110101-21201231.nc' 'SHA256' '5d7f4b19b3f0fc5e2533be9d865d0c21bdd12b813e3c3d71d825968554828f54'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_21210101-21301231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_21210101-21301231.nc' 'SHA256' '43d53b218ecec8689bdd831003132e5757496a7d50e9079b7865838f85809d53'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_21310101-21401231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_21310101-21401231.nc' 'SHA256' '8870da3a627b1052c829ce176f49f6cfcc5b5419cc4c8743dca1c5bb10dae9a1'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_21410101-21501231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_21410101-21501231.nc' 'SHA256' '9c1b6344bc0146283bc30714234ee86abe19962f8c4a7b0b1f18e54070b64322'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_21510101-21601231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_21510101-21601231.nc' 'SHA256' '1a26735ccfcd103f516f1a9b363eef8052e20af3cb3780d7e88c85d2eb9f91fe'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_21610101-21701231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_21610101-21701231.nc' 'SHA256' '3209271774796803fb8934eec49fcaaa97cfc15d75fc331e57c74f8b6cea521d'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_21710101-21801231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_21710101-21801231.nc' 'SHA256' '841af06a24141fb063d5c0af185e08b8fdce8faad409560d0633e5cebfa7a91d'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_21810101-21901231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_21810101-21901231.nc' 'SHA256' '9e1cdc08b06f2e4799eccfe4c1cda755f1a6b04c0993e50d45cf06fa70bad6bd'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_21910101-22001231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_21910101-22001231.nc' 'SHA256' '86472be4bba4656cbcf576837f1ff0c1a4bb345b66846ccd28bc693048cfeca4'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_22010101-22101231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_22010101-22101231.nc' 'SHA256' '23d4456d8bf1d2523c7f0af51ee5d35c807609317529931bf127be01f4ab64e4'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_22110101-22201231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_22110101-22201231.nc' 'SHA256' '8d32d1f9563ad3147429a44a765ed08bc074ff421b321caa77c7ce460382f37f'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_22210101-22301231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_22210101-22301231.nc' 'SHA256' '6ac6c5c6bd773b2faa3d4d4d308bd4737ce73fc90aed815284f4f5af455a7de0'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_22310101-22401231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_22310101-22401231.nc' 'SHA256' 'c1462b7ac668b73041a33a56fe2a92f2093ca226186c883bc4adaed5654bd48d'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_22410101-22501231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_22410101-22501231.nc' 'SHA256' '89173febf0850d7140bf7cd9f6a883b17278ae912ca64a26d90a1157d5b54ff5'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_22510101-22601231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_22510101-22601231.nc' 'SHA256' 'fa82182e31861c1a0ec10abfc0d7c3ec91573df6987ed7e5f13369302dff1060'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_22610101-22701231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_22610101-22701231.nc' 'SHA256' '332570c5359ea89463d7325cd42fd81a013061e5cdca69f94aac70bdfa595b90'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_22710101-22801231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_22710101-22801231.nc' 'SHA256' 'b748c9d302e9ca7e2258b9e37710883e488d5a9a3e830abdafa35a709c44d1d8'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_22810101-22901231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_22810101-22901231.nc' 'SHA256' 'df7f8cd38ed9d76e9ecfbb7cb0babd8cf68a3f5323a75d21378dd8d5916f47af'
'tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_22910101-23001231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp126/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp126_r1i1p1f1_gn_22910101-23001231.nc' 'SHA256' '8e3b37e6bebdd074354d6310d65d75c48731463680f2f8091a7e4d807c130e2c'
'tos_Oday_ACCESS-CM2_ssp245_r1i1p1f1_gn_20150101-20241231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp245/r1i1p1f1/Oday/tos/gn/v20191108/tos_Oday_ACCESS-CM2_ssp245_r1i1p1f1_gn_20150101-20241231.nc' 'SHA256' '7507cc51a2504d2e5640bd1d9839f4535522613ffd9de73745a9c0f65a00ddab'
'tos_Oday_ACCESS-CM2_ssp245_r1i1p1f1_gn_20250101-20341231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp245/r1i1p1f1/Oday/tos/gn/v20191108/tos_Oday_ACCESS-CM2_ssp245_r1i1p1f1_gn_20250101-20341231.nc' 'SHA256' 'a0a4f0c85103f5e43a135d1625f1bd9f86785663cb48dc0a8e7f0dfc83453db5'
'tos_Oday_ACCESS-CM2_ssp245_r1i1p1f1_gn_20350101-20441231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp245/r1i1p1f1/Oday/tos/gn/v20191108/tos_Oday_ACCESS-CM2_ssp245_r1i1p1f1_gn_20350101-20441231.nc' 'SHA256' '96dda442536f6447ad1fb30ca447b7dee4020c2178e348a0e7b21acf2a00ea45'
'tos_Oday_ACCESS-CM2_ssp245_r1i1p1f1_gn_20450101-20541231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp245/r1i1p1f1/Oday/tos/gn/v20191108/tos_Oday_ACCESS-CM2_ssp245_r1i1p1f1_gn_20450101-20541231.nc' 'SHA256' '54083fb27b346d0b7f3e68b189f890132dde7e2f1f4249016cf64d3c0567c1f7'
'tos_Oday_ACCESS-CM2_ssp245_r1i1p1f1_gn_20550101-20641231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp245/r1i1p1f1/Oday/tos/gn/v20191108/tos_Oday_ACCESS-CM2_ssp245_r1i1p1f1_gn_20550101-20641231.nc' 'SHA256' '2fa54899e732d30778e0a4891f79d4c048bcf1eeaa6de7087a1fd1b8055f8c76'
'tos_Oday_ACCESS-CM2_ssp245_r1i1p1f1_gn_20650101-20741231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp245/r1i1p1f1/Oday/tos/gn/v20191108/tos_Oday_ACCESS-CM2_ssp245_r1i1p1f1_gn_20650101-20741231.nc' 'SHA256' 'add3ea7f532a3808bb64560845bb85f167b6ae3ebbf81803d81f300000ce6d42'
'tos_Oday_ACCESS-CM2_ssp245_r1i1p1f1_gn_20750101-20841231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp245/r1i1p1f1/Oday/tos/gn/v20191108/tos_Oday_ACCESS-CM2_ssp245_r1i1p1f1_gn_20750101-20841231.nc' 'SHA256' '3f1d2dfa0df9cdaec341060fe28fec3d58128ace5b74cf7132d6f364247e526e'
'tos_Oday_ACCESS-CM2_ssp245_r1i1p1f1_gn_20850101-20941231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp245/r1i1p1f1/Oday/tos/gn/v20191108/tos_Oday_ACCESS-CM2_ssp245_r1i1p1f1_gn_20850101-20941231.nc' 'SHA256' '4f204832a164b182310d51bda0e5f2e11a7b566114d4cbeca501e8f46fdadda9'
'tos_Oday_ACCESS-CM2_ssp245_r1i1p1f1_gn_20950101-21001231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp245/r1i1p1f1/Oday/tos/gn/v20191108/tos_Oday_ACCESS-CM2_ssp245_r1i1p1f1_gn_20950101-21001231.nc' 'SHA256' 'dc9cb2a2ce57961d4a41fbd71e0a08a2e3781b58bb8015ca9becea2804d2b7cb'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_20150101-20241231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_20150101-20241231.nc' 'SHA256' 'b1dfc45a5f22545e2d49551ef2afb35e3e8961cfd35f9394478dd0fc6b1c56e8'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_20250101-20341231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_20250101-20341231.nc' 'SHA256' 'aa7c5cffa1764bdcd1d3a5408294ea98445a9e48ab2f68691eb04196197a8d91'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_20350101-20441231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_20350101-20441231.nc' 'SHA256' 'ed8a513a99ba99d6845dbe62d223dabe03ce9cfd237a51ed38d0770a95309df8'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_20450101-20541231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_20450101-20541231.nc' 'SHA256' 'fd6e8d2122a7c76e061af6ed96cbfa8547081905fda8b5e303949af24df2875a'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_20550101-20641231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_20550101-20641231.nc' 'SHA256' '9c60ff74a063d75b2408562f0fbe44ff42bc5e916a2cfa631688d37cf55ea398'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_20650101-20741231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_20650101-20741231.nc' 'SHA256' '8a9af8eeeba09baa0d64de9451d6654c17c5fa126581a213b4da686e039f2968'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_20750101-20841231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_20750101-20841231.nc' 'SHA256' 'ade55b73a7e6491ec18a88e3dccd076280a9c6e8a626582b82200b8488eb8605'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_20850101-20941231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_20850101-20941231.nc' 'SHA256' '17647974c1391a2f54bddd3e11016a92129a87410c22c0d17ab71dcb9db20907'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_20950101-21001231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_20950101-21001231.nc' 'SHA256' '959ea29b915b2911d539cd5e9dffd7ae2af9edc6b1be710345aad8371fa3dc08'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_21010101-21101231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_21010101-21101231.nc' 'SHA256' '78bcef0f10a1a235d961f0a9c56aef39d73ab6d515a2d71b80c6a388d8e165e6'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_21110101-21201231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_21110101-21201231.nc' 'SHA256' '11670dc7352424a70f63fde7c8b09c0e2b939feae414437f836860f8a910c047'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_21210101-21301231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_21210101-21301231.nc' 'SHA256' 'aa9e56d78d9cb243deaa141e9bf10aecda465e5b42fb5ddb3449777df27f757b'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_21310101-21401231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_21310101-21401231.nc' 'SHA256' '1589dee0ae25ea748d03705bf7078b2875327a601415a688e2e2fd8061beefb7'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_21410101-21501231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_21410101-21501231.nc' 'SHA256' '81f20c9f829f0fd4be897177c604314a764731ff11c8dd419f7ea490eaa76d33'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_21510101-21601231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_21510101-21601231.nc' 'SHA256' '51b97057260d727ceaa5990d812c241ba05810e8c25078b5a97c6ea96619e275'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_21610101-21701231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_21610101-21701231.nc' 'SHA256' 'da1cfa9e4d7de46261b82bcc7206512194e437b45b54fb4d25a7bbbe374126db'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_21710101-21801231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_21710101-21801231.nc' 'SHA256' 'd09954005d7024dd8a28e1eb61cf9bf01a97af0bb3fb5b219e6eb5f153410268'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_21810101-21901231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_21810101-21901231.nc' 'SHA256' '7a0483eb984124b6d2548511170c9959687257584d1077cf51daa18de69935a6'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_21910101-22001231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_21910101-22001231.nc' 'SHA256' '9f34bf7113e930f3f7a0392a20b1e864162b4f40a37df61a92d49d999fee2c70'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_22010101-22101231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_22010101-22101231.nc' 'SHA256' '7fa0902c719e9f8d7d35d7ec1d367441dc7c8b65c4e7889807afdd814af0ebb1'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_22110101-22201231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_22110101-22201231.nc' 'SHA256' 'c648409ebb00e141c270c9f8e4e97fd4fcec3bd9b4d1af3cb2a2f7bf62142f35'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_22210101-22301231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_22210101-22301231.nc' 'SHA256' 'b1641fc9808c24a9bf78df6639de8b3abda3ac9b268cccb7b8dd222dda03be58'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_22310101-22401231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_22310101-22401231.nc' 'SHA256' '49b82fcbeb19775abc8a3f7ac3b09869d780a6148520dd65c5ec7213e2facc7e'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_22410101-22501231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_22410101-22501231.nc' 'SHA256' 'dd74d4f3ff7bb2840a22059fff990f90fec1d6da6eea5013a4b3688fde2d7bb7'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_22510101-22601231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_22510101-22601231.nc' 'SHA256' 'd7702cf1c23eaad741ed3e11c8f65eaefe25464bc67a93ffc7884fa95bc91224'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_22610101-22701231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_22610101-22701231.nc' 'SHA256' '5a75275d95350d3df3fb746e6eef1508466daf9716e089563db31d47aa801153'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_22710101-22801231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_22710101-22801231.nc' 'SHA256' '9042bb743cb8c4b96bf7d16db43b23966fa43dc65a7e6c70364bc1cfbe63cbb3'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_22810101-22901231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_22810101-22901231.nc' 'SHA256' '7ee81e055154881daf004d11ca55661f11e0b55d6c00a28f7715161e93b12bda'
'tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_22910101-23001231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO-ARCCSS/ACCESS-CM2/ssp585/r1i1p1f1/Oday/tos/gn/v20210317/tos_Oday_ACCESS-CM2_ssp585_r1i1p1f1_gn_22910101-23001231.nc' 'SHA256' '9e6955cf11d654ea87ae7270903e02434e30664ad76e12eac271c07e48001291'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_20150101-20241231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_20150101-20241231.nc' 'SHA256' '32c7cc0618803cee9ac0ddbd3ff9091074dda9e18bb22f8f9f6e146e074e25e7'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_20250101-20341231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_20250101-20341231.nc' 'SHA256' '966f0446a4d3cd1a1c85e949be75c70aaced6ee396a6b45eb121b565f55fb223'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_20350101-20441231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_20350101-20441231.nc' 'SHA256' '75e7212f8187851dc78e63393307ebb6eb3f931e5ab2e533fbaf03674b3de741'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_20450101-20541231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_20450101-20541231.nc' 'SHA256' '3c5e8308f20acca6980bef1111de20a4b8efac914b0248bf073b36e937810541'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_20550101-20641231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_20550101-20641231.nc' 'SHA256' '3144920232e8abf05c466e25ff05c158cc6526a4782aea9476d91c0107251f35'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_20650101-20741231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_20650101-20741231.nc' 'SHA256' '7b9785c458b42645063730a0f00c0574a3993674f9dc779f3113eada74b3546e'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_20750101-20841231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_20750101-20841231.nc' 'SHA256' '580d3c87e6c366221814d026ef624fbea879a7ae5c34bebf4c13cd8778180140'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_20850101-20941231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_20850101-20941231.nc' 'SHA256' 'b93a7a38f5f5c6d52f49a5ed41802df6ba8ac06b6d3ca57e6fc8f77c68562111'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_20950101-21001231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_20950101-21001231.nc' 'SHA256' 'bbe6d84e94ae680f6f86bad0071c9382bb5d1af306c49429483100023b5b55d8'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_21010101-21101231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_21010101-21101231.nc' 'SHA256' '07b72f40809c187c67b90fc686c7f2c54400a4980b97b140f8c861cb38566609'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_21110101-21201231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_21110101-21201231.nc' 'SHA256' '65389a3fff4c60b6cd27d41423feb5e06beeb08778ea31324325aec6375840f9'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_21210101-21301231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_21210101-21301231.nc' 'SHA256' '14940c64a8a6b9c55a71dcf131d2ecb6f827ce4e51bcfd4053e21dc4ccb485b0'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_21310101-21401231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_21310101-21401231.nc' 'SHA256' '4993697e12826a746c201c5fb76ac2fb624a0c1735b956ea2b650e3c6b4849de'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_21410101-21501231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_21410101-21501231.nc' 'SHA256' '91b25e73763cc1bf3192f1e02ed95d4dba4c183052b49885e09b650ac90dcf84'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_21510101-21601231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_21510101-21601231.nc' 'SHA256' 'b678855ff3f5f1393b4ce0a1d46df3a1fca107fdffa5176fbd048b7b1871d862'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_21610101-21701231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_21610101-21701231.nc' 'SHA256' 'acdc1e4c5e04b025e37c25a377281c3c6c2e259e9c4893ddb2e797068e1935ed'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_21710101-21801231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_21710101-21801231.nc' 'SHA256' '609b4695bd9721ff07d47e20d635e148a8c385164075cb89288c509d6bbc9009'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_21810101-21901231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_21810101-21901231.nc' 'SHA256' 'b1db5461b94f9d74393d93f6527c34b10cd4269f835327044e768ac2b5d54de9'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_21910101-22001231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_21910101-22001231.nc' 'SHA256' '509fcfec0444e3dc5cdb392c505246bc378ba86460fa63f83735760ff920857d'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_22010101-22101231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_22010101-22101231.nc' 'SHA256' 'ea27b18f597f8d7456a084c4a116f30253266884667b2bd1cf70897e22f64c51'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_22110101-22201231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_22110101-22201231.nc' 'SHA256' '7548652c55cc14dc8629a52f852c0532ec74e3c9fc03878f54461a8aefc88ca5'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_22210101-22301231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_22210101-22301231.nc' 'SHA256' '7756236e3af32545c774db2efb372a631bc3b76bf057a765d7b084ab95795e95'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_22310101-22401231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_22310101-22401231.nc' 'SHA256' '05d035bc60f6475a5bec9ecd891ccb84fa31888ad81c25b48bef7ac1f514c347'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_22410101-22501231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_22410101-22501231.nc' 'SHA256' '98e69ef7e86893fdc3b7dcd7f41330b25f37d7ce58c6fae7815323bc92164a95'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_22510101-22601231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_22510101-22601231.nc' 'SHA256' '5867313ca76536e2c3b054b72332e6fb63f56bada541e68e4574cc71e95ca594'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_22610101-22701231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_22610101-22701231.nc' 'SHA256' '05fc6dcefd1151bff79341dff76ffe932ea4630aea74a2b3c035c470f2388f78'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_22710101-22801231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_22710101-22801231.nc' 'SHA256' '9e2b6c26a689692411a048ba58c30a1577950e10b9b7c0a0a8bdfeec778b61f5'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_22810101-22901231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_22810101-22901231.nc' 'SHA256' 'f25bbcbdc0687f63aaf973389902ef2209c60a7ed7cf3ed17cc3338fb6b079f6'
'tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_22910101-23001231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp126/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp126_r1i1p1f1_gn_22910101-23001231.nc' 'SHA256' '830502952daabf40066e1e541c90a40bff1fb06971e909d9dee848cbf24d6ef4'
'tos_Oday_ACCESS-ESM1-5_ssp245_r1i1p1f1_gn_20150101-20241231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp245/r1i1p1f1/Oday/tos/gn/v20191115/tos_Oday_ACCESS-ESM1-5_ssp245_r1i1p1f1_gn_20150101-20241231.nc' 'SHA256' '0738cd4c967f4348efb95944f82f7f28add8520c4c94d1ff1e53b5fac856ca02'
'tos_Oday_ACCESS-ESM1-5_ssp245_r1i1p1f1_gn_20250101-20341231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp245/r1i1p1f1/Oday/tos/gn/v20191115/tos_Oday_ACCESS-ESM1-5_ssp245_r1i1p1f1_gn_20250101-20341231.nc' 'SHA256' '11dd661febba8fcf6796a24ab884a9cb74027f5ddf461b00fa41c5e3837b6b25'
'tos_Oday_ACCESS-ESM1-5_ssp245_r1i1p1f1_gn_20350101-20441231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp245/r1i1p1f1/Oday/tos/gn/v20191115/tos_Oday_ACCESS-ESM1-5_ssp245_r1i1p1f1_gn_20350101-20441231.nc' 'SHA256' 'e7381859c205bae0c57d89ac5941dea1f9edfbe712bce27fd78c9216c1325216'
'tos_Oday_ACCESS-ESM1-5_ssp245_r1i1p1f1_gn_20450101-20541231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp245/r1i1p1f1/Oday/tos/gn/v20191115/tos_Oday_ACCESS-ESM1-5_ssp245_r1i1p1f1_gn_20450101-20541231.nc' 'SHA256' 'd6e310b5a960efff8f6e6d11edd2f2a6e8909ec67baa760129cf06cef6bdb9b4'
'tos_Oday_ACCESS-ESM1-5_ssp245_r1i1p1f1_gn_20550101-20641231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp245/r1i1p1f1/Oday/tos/gn/v20191115/tos_Oday_ACCESS-ESM1-5_ssp245_r1i1p1f1_gn_20550101-20641231.nc' 'SHA256' '2f66ed1df92c7a73e53caf5ff351450daaea89f9d188cb746fb8f204092fe20b'
'tos_Oday_ACCESS-ESM1-5_ssp245_r1i1p1f1_gn_20650101-20741231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp245/r1i1p1f1/Oday/tos/gn/v20191115/tos_Oday_ACCESS-ESM1-5_ssp245_r1i1p1f1_gn_20650101-20741231.nc' 'SHA256' '18c9c0e6514b71b0ada9bd624a7154ba047504a4c8eafae7c1ef3222808736ca'
'tos_Oday_ACCESS-ESM1-5_ssp245_r1i1p1f1_gn_20750101-20841231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp245/r1i1p1f1/Oday/tos/gn/v20191115/tos_Oday_ACCESS-ESM1-5_ssp245_r1i1p1f1_gn_20750101-20841231.nc' 'SHA256' '4f0b6e1b6a0805ab40f70a344ee34aa0cda7fa86400a6299f4636339fddbe9a2'
'tos_Oday_ACCESS-ESM1-5_ssp245_r1i1p1f1_gn_20850101-20941231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp245/r1i1p1f1/Oday/tos/gn/v20191115/tos_Oday_ACCESS-ESM1-5_ssp245_r1i1p1f1_gn_20850101-20941231.nc' 'SHA256' 'a17a3add7f20cb39c2edc640bd18548304b09b3868a254c60ea0098bec11a45e'
'tos_Oday_ACCESS-ESM1-5_ssp245_r1i1p1f1_gn_20950101-21001231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp245/r1i1p1f1/Oday/tos/gn/v20191115/tos_Oday_ACCESS-ESM1-5_ssp245_r1i1p1f1_gn_20950101-21001231.nc' 'SHA256' '42297146a28c4737155efa6ce6ab44bcb895249e522485a54352b5536ddcd03a'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_20150101-20241231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_20150101-20241231.nc' 'SHA256' '0de0d4fa904f5d33669990e01a6acab2613eefab9a976d8babe004b4e5a4f66e'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_20250101-20341231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_20250101-20341231.nc' 'SHA256' '37bada7a12f2d65af9cb46ac01c1aa9e16dc35cc40dacf940899329c6635a2f2'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_20350101-20441231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_20350101-20441231.nc' 'SHA256' '4f99acc57d95611a9d4324242657c85c44c5e384a1be28ad1a9cb7745b48e85a'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_20450101-20541231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_20450101-20541231.nc' 'SHA256' '5307518ea7451aa07e6540352529cd0448d61c809cc93ec534a38d531aa919aa'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_20550101-20641231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_20550101-20641231.nc' 'SHA256' 'fd7fb1795249bbb660615fcd772f33182df2ee6a444347e62c0833063b277213'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_20650101-20741231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_20650101-20741231.nc' 'SHA256' '7ed0c50c51c567d5757e7f87cc896428437ece76ce2789b157216e8db133323b'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_20750101-20841231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_20750101-20841231.nc' 'SHA256' '0ebbe5d630c944489f06096040f55be8673bb93637f50d28697463e740291b9e'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_20850101-20941231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_20850101-20941231.nc' 'SHA256' 'f9f0482844b1de1c1f193f18f685f2c8936b4c4c0ecee215d3f4084cbbae0d10'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_20950101-21001231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_20950101-21001231.nc' 'SHA256' 'a2c8e86a2e8b92a4c5d5396572ca5e5d73efc45a8998842194b64073aa085645'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_21010101-21101231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_21010101-21101231.nc' 'SHA256' '2af1302bf1154a5f4b62af769e17eeead4fe4f70e191abe340a9d07bc8826b3b'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_21110101-21201231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_21110101-21201231.nc' 'SHA256' '55be6a1491e4449f9f9b6bf517bb7614c17f061cb3c4624d5f3633a81f77740e'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_21210101-21301231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_21210101-21301231.nc' 'SHA256' 'cdf5654618140f9f59001b5453cd504a7aa5516fa89a8e60a490a58874ad1950'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_21310101-21401231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_21310101-21401231.nc' 'SHA256' '98fba2790bcd2efd53a68262ab10e9c922f4a5301f894334856fc1dfefac180a'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_21410101-21501231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_21410101-21501231.nc' 'SHA256' '5268253b40c5be85c3ac2d5dea8365bd80705ee381631bf4249b6cbce6c0569a'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_21510101-21601231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_21510101-21601231.nc' 'SHA256' 'e955f0db25bddded83f07b3dc8d4d33a4a14c21b40bced2a7e269988d6699d91'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_21610101-21701231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_21610101-21701231.nc' 'SHA256' 'd41502ae95244f9ca70c98d172ca7cb681686b93255e0f75e2ee41f19a3bfaf2'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_21710101-21801231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_21710101-21801231.nc' 'SHA256' 'a01aa55214e5d209a35f15267d4c7a48f2c6d9b977f54274812fbb9407ddb504'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_21810101-21901231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_21810101-21901231.nc' 'SHA256' '572ae5c7f082b648d51281dc2c643de0d23f885c8fe046ce942dc18dc893e4c1'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_21910101-22001231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_21910101-22001231.nc' 'SHA256' 'c46a235608e76a270205dc3eb0ba6a10b35c6fe096750457153c5f29f54f2972'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_22010101-22101231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_22010101-22101231.nc' 'SHA256' 'b0573d19d399391201594523bdbbaf681898ca1d62f3f3770250b1d0954fae56'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_22110101-22201231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_22110101-22201231.nc' 'SHA256' '4d94b77c81bdc3039467c8b80071affcbdad7514689f615d12b7753cd37ca4fb'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_22210101-22301231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_22210101-22301231.nc' 'SHA256' '6960cecc878908fc3eb837f428fd9299ae8f40666952fdd9e515b640b237d771'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_22310101-22401231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_22310101-22401231.nc' 'SHA256' 'acce3f2b46461617af7ff02b6d62331bcc1116dcfc81e982275e36b3fec0befc'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_22410101-22501231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_22410101-22501231.nc' 'SHA256' '222042aae549ac7295bff07b4474fb0879ce7f34aa88e67b465c9e66dc008a25'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_22510101-22601231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_22510101-22601231.nc' 'SHA256' 'b48a186bad396a5b6661f023061657086a6d15dd5c15348491658de20339d9ad'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_22610101-22701231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_22610101-22701231.nc' 'SHA256' 'a8fccd85e9e1865d82ae7e25ae3d82ba976726d7998330db269b0f0c3dd1ccd3'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_22710101-22801231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_22710101-22801231.nc' 'SHA256' '6575445d8ac94dccd04b6beae6c2724790d3e2f7e054fb1350b69bbdb294bbcd'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_22810101-22901231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_22810101-22901231.nc' 'SHA256' 'f7864dbb078214949178e7ad84cde35e760688eacaa0ff330f8944cf66cafac4'
'tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_22910101-23001231.nc' 'http://esgf.nci.org.au/thredds/fileServer/master/CMIP6/ScenarioMIP/CSIRO/ACCESS-ESM1-5/ssp585/r1i1p1f1/Oday/tos/gn/v20210318/tos_Oday_ACCESS-ESM1-5_ssp585_r1i1p1f1_gn_22910101-23001231.nc' 'SHA256' '33077c4f44d2099ab22feddb5eb548f3b3c1f86d92e8f5aaa0077459ef15cfa0'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 134 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
